'Ultrasonic and Time of Flight TestingCON        _clkmode = xtal1 + pll16x                                               'Standard clock mode * crystal frequency = 80 MHz        _xinfreq = 5_000_000        _ConClkFreq = ((_clkmode - xtal1) >> 6) * _xinfreq        _Ms_001 = _ConClkFreq / 1_000VAR  long  mainHubMS, cog, cogStack[128]  ' Debugging  long  tofMem[2], ultraMem[2]OBJ  Def           : "Definitions.spin"  tof[2]        : "ToF.spin"  ultra         : "Ultrasonic_v3.spin"  pst           : "Parallax Serial Terminal"PUB Stop{{ Check & Stop/Unload Core if loaded }}  if cog    cogstop(~cog - 1)  returnPUB Start(MS, mainToFAdd, mainUltraAdd){{ Load Sensor Core }}  mainHubMS := MS  Stop  cog := cognew(SensorCore(mainToFAdd, mainUltraAdd), @cogStack) + 1  return cogPUB SensorCore(ToFSenAdd, UltraSenAdd) | ToF_Range1, ToF_Range2, UltraRange1, UltraRange2  pst.Start(9600)  WAITCNT((2*(clkfreq/1000)) + cnt)  ToF_Init  ultra.Init(Def#Ultra1SCL, Def#Ultra1SDA, 0)  ultra.Init(Def#Ultra2SCL, Def#Ultra2SDA, 1)  repeat  ''Time of Flight #1    long[ToFSenAdd][0] := tof[0].GetSingleRange($29)    'WAITCNT((1*(clkfreq)) + cnt)  ''Time of Flight #2    long[ToFSenAdd][1] := tof[1].GetSingleRange($29)    'WAITCNT((1*(clkfreq)) + cnt)  ''Ultrasonic #1    long[UltraSenAdd][0] := ultra.readSensor(0)    'WAITCNT((1*(clkfreq)) + cnt)  ''Ultrasonic #2    long[UltraSenAdd][1]:= ultra.readSensor(1)    'WAITCNT((1*(clkfreq)) + cnt)PRI ToF_Init | i  tof[0].init(Def#ToF1SCL,Def#ToF1SDA,Def#ToF1RST)  tof[0].ChipReset(1)  Pause(1000)  tof[0].FreshReset($29)  tof[0].MandatoryLoad($29)  tof[0].RecommendedLoad($29)  tof[0].FreshReset($29)  tof[1].init(Def#ToF2SCL,Def#ToF2SDA,Def#ToF2RST)  tof[1].ChipReset(1)  Pause(1000)  tof[1].FreshReset($29)  tof[1].MandatoryLoad($29)  tof[1].RecommendedLoad($29)  tof[1].FreshReset($29)PRI Pause(ms) | t  t:=cnt - 1088  repeat (ms#>0)    waitcnt(t += mainHubMS)  return